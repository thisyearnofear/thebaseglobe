import{loadingProgressManager}from"./LoadingProgressManager.js";export class AudioManager{constructor(){this.buffers={},this.loader=new THREE.AudioLoader,this.listener=new THREE.AudioListener,this.categories={}}setCamera(e){e.add(this.listener)}load(e,s,o){const t=new Promise(((t,r)=>{this.loader.load(o,(o=>{this.buffers[e]=o,null!==s&&(this.categories[s]||(this.categories[s]=[]),this.categories[s].push(e)),t()}),(()=>{}),r)}));loadingProgressManager.add(t)}play(e,s={}){let o=e;const t=this.categories[e];t&&(o=t[Math.floor(Math.random()*t.length)]);const r=this.buffers[o],a=new THREE.Audio(this.listener);a.setBuffer(r),s.loop&&a.setLoop(!0),s.volume&&a.setVolume(s.volume),a.play()}}export const audioManagerInstance=new AudioManager;