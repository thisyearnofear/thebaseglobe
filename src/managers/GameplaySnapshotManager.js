class GameplaySnapshotManager{constructor(t,s,e){this.renderer=t,this.scene=s,this.camera=e,this.snapshot=null,this.captureTime=5e3,this.gameStartTime=null}startCapture(){this.gameStartTime=Date.now(),this.snapshot=null,this.checkAndCapture()}checkAndCapture(){this.snapshot||(Date.now()-this.gameStartTime>=this.captureTime?this.captureSnapshot():requestAnimationFrame((()=>this.checkAndCapture())))}captureSnapshot(){this.renderer.render(this.scene,this.camera);const t=this.renderer.domElement.toDataURL("image/jpeg",.7);this.snapshot=t}checkGameEnd(t){"playing"!==t&&this.snapshot&&this.displaySnapshot()}getSnapshot(){return this.snapshot}checkGameEnd(t){"playing"!==t&&this.snapshot&&this.displaySnapshot()}displaySnapshot(){const t=document.getElementById("gameplay-snapshot"),s=document.getElementById("gameplay-snapshot-container");this.snapshot?(t.src=this.snapshot,s.style.display="block"):s.style.display="none"}clearSnapshot(){this.snapshot=null}}export default GameplaySnapshotManager;